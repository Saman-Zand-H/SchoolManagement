openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/students/:
    get:
      operationId: listReadOnlyStudents
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadOnlyStudents'
          description: ''
      tags:
      - api
    post:
      operationId: createWriteOnlyStudents
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyStudents'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyStudents'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyStudents'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyStudents'
          description: ''
      tags:
      - api
  /api/v1/students/{id}/:
    get:
      operationId: retrieveReadOnlyStudents
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOnlyStudents'
          description: ''
      tags:
      - api
    put:
      operationId: updateWriteOnlyStudents
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyStudents'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyStudents'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyStudents'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyStudents'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWriteOnlyStudents
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyStudents'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyStudents'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyStudents'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyStudents'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWriteOnlyStudents
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/users/:
    get:
      operationId: listReadOnlyUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadOnlyUsers'
          description: ''
      tags:
      - api
    post:
      operationId: createWriteOnlyUsers
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyUsers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyUsers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyUsers'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyUsers'
          description: ''
      tags:
      - api
  /api/v1/users/{id}/:
    get:
      operationId: retrieveReadOnlyUsers
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOnlyUsers'
          description: ''
      tags:
      - api
    put:
      operationId: updateWriteOnlyUsers
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyUsers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyUsers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyUsers'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyUsers'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWriteOnlyUsers
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyUsers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyUsers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyUsers'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyUsers'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWriteOnlyUsers
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/classes/:
    get:
      operationId: listReadOnlyClasses
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadOnlyClasses'
          description: ''
      tags:
      - api
    post:
      operationId: createWriteOnlyClasses
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyClasses'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyClasses'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyClasses'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyClasses'
          description: ''
      tags:
      - api
  /api/v1/classes/{id}/:
    get:
      operationId: retrieveReadOnlyClasses
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOnlyClasses'
          description: ''
      tags:
      - api
    put:
      operationId: updateWriteOnlyClasses
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyClasses'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyClasses'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyClasses'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyClasses'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWriteOnlyClasses
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyClasses'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyClasses'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyClasses'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyClasses'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWriteOnlyClasses
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/exams/:
    get:
      operationId: listReadOnlyExams
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadOnlyExams'
          description: ''
      tags:
      - api
    post:
      operationId: createWriteOnlyExams
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyExams'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyExams'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyExams'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyExams'
          description: ''
      tags:
      - api
  /api/v1/exams/{id}/:
    get:
      operationId: retrieveReadOnlyExams
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOnlyExams'
          description: ''
      tags:
      - api
    put:
      operationId: updateWriteOnlyExams
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyExams'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyExams'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyExams'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyExams'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWriteOnlyExams
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyExams'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyExams'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyExams'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyExams'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWriteOnlyExams
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/articles/:
    get:
      operationId: listReadOnlyArticles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadOnlyArticles'
          description: ''
      tags:
      - api
    post:
      operationId: createWriteOnlyArticles
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyArticles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyArticles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyArticles'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyArticles'
          description: ''
      tags:
      - api
  /api/v1/articles/{id}/:
    get:
      operationId: retrieveReadOnlyArticles
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOnlyArticles'
          description: ''
      tags:
      - api
    put:
      operationId: updateWriteOnlyArticles
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyArticles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyArticles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyArticles'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyArticles'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWriteOnlyArticles
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyArticles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyArticles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyArticles'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyArticles'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWriteOnlyArticles
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/assignments/:
    get:
      operationId: listReadOnlyAssignments
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadOnlyAssignments'
          description: ''
      tags:
      - api
    post:
      operationId: createWriteOnlyAssignments
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyAssignments'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyAssignments'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyAssignments'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyAssignments'
          description: ''
      tags:
      - api
  /api/v1/assignments/{id}/:
    get:
      operationId: retrieveReadOnlyAssignments
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOnlyAssignments'
          description: ''
      tags:
      - api
    put:
      operationId: updateWriteOnlyAssignments
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyAssignments'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyAssignments'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyAssignments'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyAssignments'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWriteOnlyAssignments
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyAssignments'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyAssignments'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyAssignments'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyAssignments'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWriteOnlyAssignments
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/teachers/:
    get:
      operationId: listReadOnlyTeachers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadOnlyTeachers'
          description: ''
      tags:
      - api
    post:
      operationId: createWriteOnlyTeachers
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyTeachers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyTeachers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyTeachers'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyTeachers'
          description: ''
      tags:
      - api
  /api/v1/teachers/{id}/:
    get:
      operationId: retrieveReadOnlyTeachers
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOnlyTeachers'
          description: ''
      tags:
      - api
    put:
      operationId: updateWriteOnlyTeachers
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyTeachers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyTeachers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyTeachers'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyTeachers'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWriteOnlyTeachers
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyTeachers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyTeachers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyTeachers'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyTeachers'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWriteOnlyTeachers
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/grades/:
    get:
      operationId: listReadOnlyGrades
      description: A viewset for listing and creating.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadOnlyGrades'
          description: ''
      tags:
      - api
    post:
      operationId: createWriteOnlyGrades
      description: A viewset for listing and creating.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyGrades'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyGrades'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyGrades'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyGrades'
          description: ''
      tags:
      - api
  /api/v1/grades/{id}/:
    get:
      operationId: retrieveReadOnlyGrades
      description: A viewset for listing and creating.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOnlyGrades'
          description: ''
      tags:
      - api
    put:
      operationId: updateWriteOnlyGrades
      description: A viewset for listing and creating.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyGrades'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyGrades'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyGrades'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyGrades'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWriteOnlyGrades
      description: A viewset for listing and creating.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyGrades'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyGrades'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyGrades'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyGrades'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWriteOnlyGrades
      description: A viewset for listing and creating.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/auth/logout/:
    get:
      operationId: listLogouts
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
    post:
      operationId: createLogout
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/auth/user/:
    get:
      operationId: retrieveUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
  /api/v1/auth/password/reset/:
    post:
      operationId: createPasswordReset
      description: 'Calls Django Auth PasswordResetForm save method.


        Accepts the following POST parameters: email

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
      tags:
      - api
  /api/v1/auth/password/reset/confirm/:
    post:
      operationId: createPasswordResetConfirm
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/auth/login/:
    post:
      operationId: createLogin
      description: 'Check the credentials and return the REST Token

        if the credentials are valid and authenticated.

        Calls Django Auth login method to register User ID

        in Django session framework


        Accept the following POST parameters: username, password

        Return the REST Framework Token Object''s key.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
      tags:
      - api
  /api/v1/auth/password/change/:
    post:
      operationId: createPasswordChange
      description: 'Calls Django Auth SetPasswordForm save method.


        Accepts the following POST parameters: new_password1, new_password2

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
      tags:
      - api
  /api/v1/auth/token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
  /api/v1/auth/token/refresh/:
    post:
      operationId: createCookieTokenRefresh
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CookieTokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CookieTokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CookieTokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CookieTokenRefresh'
          description: ''
      tags:
      - api
  /api/v1/auth/registration/:
    post:
      operationId: createRegister
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - api
  /api/v1/auth/registration/verify-email/:
    post:
      operationId: createVerifyEmail
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
      tags:
      - api
  /api/v1/auth/registration/resend-email/:
    post:
      operationId: createEmailAddress
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendEmailVerification'
          description: ''
      tags:
      - api
components:
  schemas:
    ReadOnlyStudents:
      type: object
      properties:
        user:
          type: object
          properties:
            username:
              type: string
              maxLength: 20
            first_name:
              type: string
              maxLength: 254
            last_name:
              type: string
              maxLength: 254
            email:
              type: string
              format: email
              nullable: true
              maxLength: 254
            get_user_type_display:
              type: string
              readOnly: true
            url:
              type: string
              readOnly: true
          required:
          - username
          - first_name
          - last_name
        student_class:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
      required:
      - user
    ReadOnlyUsers:
      type: object
      properties:
        username:
          type: string
          maxLength: 20
        first_name:
          type: string
          maxLength: 254
        last_name:
          type: string
          maxLength: 254
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        get_user_type_display:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
      required:
      - username
      - first_name
      - last_name
    ReadOnlyClasses:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        subjects:
          type: array
          items:
            type: string
        school:
          type: string
          readOnly: true
        class_id:
          type: string
          maxLength: 50
      required:
      - subjects
      - class_id
    ReadOnlyExams:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date
        subject:
          type: string
          readOnly: true
        teacher:
          type: string
          readOnly: true
        exam_class:
          type: string
          readOnly: true
        grade_exam:
          type: array
          items:
            type: object
            properties:
              grade:
                type: string
                format: decimal
                multipleOf: 0.01
                maximum: 10000
                minimum: -10000
                nullable: true
              student:
                type: string
                readOnly: true
              exam:
                type: integer
              url:
                type: string
                readOnly: true
            required:
            - exam
        school:
          type: string
          readOnly: true
      required:
      - timestamp
      - grade_exam
    ReadOnlyArticles:
      type: object
      properties:
        title:
          type: string
          maxLength: 80
        author:
          type: string
          readOnly: true
        school:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            type: string
        text:
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - title
      - categories
      - text
    ReadOnlyAssignments:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        assignment_class:
          type: string
          readOnly: true
        subject:
          type: string
          readOnly: true
        body:
          type: string
        deadline:
          type: string
          format: date
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - body
      - deadline
    ReadOnlyTeachers:
      type: object
      properties:
        user:
          type: object
          properties:
            username:
              type: string
              maxLength: 20
            first_name:
              type: string
              maxLength: 254
            last_name:
              type: string
              maxLength: 254
            email:
              type: string
              format: email
              nullable: true
              maxLength: 254
            get_user_type_display:
              type: string
              readOnly: true
            url:
              type: string
              readOnly: true
          required:
          - username
          - first_name
          - last_name
        url:
          type: string
          readOnly: true
        university:
          type: string
          maxLength: 100
        degree:
          type: string
          maxLength: 100
      required:
      - user
    ReadOnlyGrades:
      type: object
      properties:
        grade:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 10000
          minimum: -10000
          nullable: true
        student:
          type: string
          readOnly: true
        exam:
          type: integer
        url:
          type: string
          readOnly: true
      required:
      - exam
    UserDetails:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          readOnly: true
          nullable: true
        first_name:
          type: string
          maxLength: 254
        last_name:
          type: string
          maxLength: 254
      required:
      - username
      - first_name
      - last_name
    WriteOnlyStudents:
      type: object
      properties:
        user:
          type: integer
        student_class:
          type: integer
          nullable: true
      required:
      - user
    WriteOnlyUsers:
      type: object
      properties:
        username:
          type: string
          maxLength: 20
        first_name:
          type: string
          maxLength: 254
        last_name:
          type: string
          maxLength: 254
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        password:
          type: string
          writeOnly: true
        user_type:
          enum:
          - S
          - T
          - SS
          type: string
        about:
          type: string
      required:
      - username
      - first_name
      - last_name
      - password
      - user_type
    WriteOnlyClasses:
      type: object
      properties:
        class_id:
          type: string
          maxLength: 50
        school:
          type: integer
        subjects:
          type: array
          items:
            type: integer
      required:
      - class_id
      - school
      - subjects
    WriteOnlyExams:
      type: object
      properties:
        timestamp:
          type: string
          format: date
        full_score:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 10000
          minimum: -10000
        visible_to_students:
          type: boolean
        subject:
          type: integer
        teacher:
          type: integer
        exam_class:
          type: integer
      required:
      - timestamp
      - subject
      - teacher
      - exam_class
    WriteOnlyArticles:
      type: object
      properties:
        title:
          type: string
          maxLength: 80
        categories:
          type: array
          items:
            type: string
          maxItems: 5
        text:
          type: string
        author:
          type: integer
          nullable: true
        school:
          type: integer
          nullable: true
      required:
      - title
      - categories
      - text
    WriteOnlyAssignments:
      type: object
      properties:
        body:
          type: string
        deadline:
          type: string
          format: date
        assignment_class:
          type: integer
        subject:
          type: integer
      required:
      - body
      - deadline
      - assignment_class
      - subject
    WriteOnlyTeachers:
      type: object
      properties:
        degree:
          type: string
          maxLength: 100
        university:
          type: string
          maxLength: 100
        user:
          type: integer
        school:
          type: integer
      required:
      - user
      - school
    WriteOnlyGrades:
      type: object
      properties:
        grade:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 10000
          minimum: -10000
          nullable: true
        student:
          type: integer
        exam:
          type: integer
      required:
      - student
      - exam
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - uid
      - token
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    CookieTokenRefresh:
      type: object
      properties:
        refresh:
          type: string
          description: WIll override cookie.
        access:
          type: string
          readOnly: true
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 20
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - username
      - password1
      - password2
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
[0m