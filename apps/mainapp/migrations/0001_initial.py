# Generated by Django 3.2.7 on 2021-09-30 10:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('classes', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=30)),
                ('teachers', models.ManyToManyField(related_name='subject_teacher', to='mainapp.Teacher')),
            ],
            managers=[
                ('all_teachers', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exams', models.ManyToManyField(related_name='student_exams', to='mainapp.Exam')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('student_class', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.DecimalField(decimal_places=2, max_digits=6)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='grade_user', to='mainapp.student')),
                ('subject', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='grade_subject', to='mainapp.subject')),
            ],
        ),
        migrations.AddField(
            model_name='exam',
            name='grades',
            field=models.ManyToManyField(related_name='exam_grades', to='mainapp.Grade'),
        ),
        migrations.AddField(
            model_name='exam',
            name='subject',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='exam_subject', to='mainapp.subject'),
        ),
        migrations.AddField(
            model_name='exam',
            name='teacher',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='exam_subject', to='mainapp.teacher'),
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_id', models.CharField(max_length=5)),
                ('exams', models.ManyToManyField(related_name='class_exams', to='mainapp.Exam')),
                ('students', models.ManyToManyField(related_name='class_students', to='mainapp.Student')),
                ('subjects', models.ManyToManyField(related_name='class_subjects', to='mainapp.Subject')),
                ('teachers', models.ManyToManyField(related_name='class_students', to='mainapp.Teacher')),
            ],
            managers=[
                ('all_teachers', django.db.models.manager.Manager()),
            ],
        ),
    ]
